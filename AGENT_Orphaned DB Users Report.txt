USE [msdb]
GO

/****** Object:  Job [[DBA] - Orphaned DB Users Report]    Script Date: 4/24/2024 1:19:48 PM ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 4/24/2024 1:19:49 PM ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'[DBA] - Orphaned DB Users Report', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Steve_and_Josh', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Clear history table]    Script Date: 4/24/2024 1:19:50 PM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Clear history table', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'--clear history from temp table
TRUNCATE TABLE spc_dba_utilities.dbo.dba_tmp_orphanedusers', 
		@database_name=N'master', 
		@flags=4
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Generate and send report]    Script Date: 4/24/2024 1:19:50 PM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Generate and send report', 
		@step_id=2, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'
--execute proc
EXEC [spc_dba_utilities].[dbo].[dba_sp_orphaned_users]


--Dump proc output into #temp table

SELECT * INTO #orphanreporttemp
FROM spc_dba_utilities.dbo.dba_tmp_orphanedusers


DECLARE @CountValue INT
SELECT @CountValue = COUNT(*)
FROM spc_dba_utilities..dba_tmp_orphanedusers

IF (@CountValue = 0)
BEGIN 

--Declare variables
DECLARE @ServerName VARCHAR(255)
DECLARE @MailSubject VARCHAR(255)
DECLARE @CombinedSubject VARCHAR(255)
--DECLARE @xml NVARCHAR(MAX) --XML VARIABLE DECLARED IN ORPHANS DETECTED SECTION
DECLARE @blankbody NVARCHAR(MAX)

--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - Weekly Orphaned DB User report for '' + @@SERVERNAME
SET @CombinedSubject = @ServerName + @MailSubject


SET @blankbody = ''NO ORPHANED USERS DETECTED ON THE INSTANCE

~*~NFAR~*~''

--Trigger the email 
EXEC msdb.dbo.sp_send_dbmail
	@profile_name = ''SQLServer''
,	@recipients = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com; todd.kleinhans@sierraspace.com''
,	@subject = @MailSubject
,	@body = @blankbody
,   @body_format = ''HTML'';

END


ELSE 

BEGIN

--Declare variables
--DECLARE @ServerName VARCHAR(255) --VARIABLE DECLARED IN ZERO ORPHANS SECTION
--DECLARE @MailSubject VARCHAR(255) --VARIABLE DECLARED IN ZERO ORPHANS SECTION
--DECLARE @CombinedSubject VARCHAR(255) --VARIABLE DECLARED IN ZERO ORPHANS SECTION
DECLARE @xml NVARCHAR(MAX)
DECLARE @body NVARCHAR(MAX)

--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - Weekly Orphaned DB User report for '' + @@SERVERNAME
SET @CombinedSubject = @ServerName + @MailSubject


SET @xml = CAST(( SELECT [-- REMAP STATEMENT --] AS ''td'','''',[-- SERVER NAME --] AS ''td'','''',[-- INSTANCE NAME --] AS ''td'','''',[-- DATABASE NAME --] AS ''td'','''',[-- TIME STAMP --] AS ''td'',''''
FROM  #orphanreporttemp 
ORDER BY [-- TIME STAMP --]
--ORDER BY [DatabaseName],[DatabaseRole],[DatabaseUserName],[InstanceLoginType]  
FOR XML PATH(''tr''), ELEMENTS ) AS NVARCHAR(MAX))


SET @body = ''<html><body><H3>Captured Sessions</H3>
Below is a distribution of orphaned db users present on '' + @@SERVERNAME + 

''
<BR><BR>
In the first column is a T-SQL statement that can be copy / pasted to a SQL Editor window to map the user to a corresponding login if desired.

<BR><BR>
<table border = 1> 
<tr>
<th> REMAP STATEMENT </th> <th> SERVER NAME </th> <th> INSTANCE NAME </th> <th> DATABASE NAME </th> <th> TIME STAMP </th>
</tr>''    


SET @body = @body + @xml +''</table></body></html> 
<BR><BR>
Regards,
<BR>
SierraSpace Database Services'' 

--Trigger the email 
EXEC msdb.dbo.sp_send_dbmail
	@profile_name = ''SQLServer''
,	@recipients = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com; todd.kleinhans@sierraspace.com''
,	@subject = @MailSubject
,	@body = @body
,   @body_format = ''HTML'';

END


--Drop the session temp table
DROP TABLE #orphanreporttemp
', 
		@database_name=N'master', 
		@flags=4
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Orphaned DB Users Report Schedule', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=4, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20230707, 
		@active_end_date=99991231, 
		@active_start_time=70000, 
		@active_end_time=235959, 
		@schedule_uid=N'f7507e8c-6bcd-4300-b63f-f40ee5cbd67b'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO

