USE [msdb]
GO

/****** Object:  Job [[DBA] - Server Instance Level Attestation]    Script Date: 4/24/2024 1:21:20 PM ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 4/24/2024 1:21:21 PM ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'[DBA] - Server Instance Level Attestation', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Generate a list of accounts that have been granted membership to highly elevated roles within SQL Server', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'sa', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Generate and send report]    Script Date: 4/24/2024 1:21:22 PM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Generate and send report', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=3, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'--EXEC [dba_sp_server_level_role_members]

--SELECT * FROM [server_level_role_attestation_TEMP]
--execute proc
EXEC [spc_dba_utilities].[dbo].[dba_sp_server_level_role_members]


--Dump proc output into #temp table

SELECT * INTO #serverrolestemp
FROM spc_dba_utilities.dbo.server_level_role_attestation_TEMP
WHERE SERVER_LOGIN_NAME NOT IN (''117968-a1'',''117962-a1'',''cms_admin'',''idera_dm_admin'',''sa'')


DECLARE @CountValue INT
SELECT @CountValue = COUNT(*)
FROM spc_dba_utilities..server_level_role_attestation_TEMP

IF (@CountValue = 0)
BEGIN 

--Declare variables
DECLARE @ServerName VARCHAR(255)
DECLARE @MailSubject VARCHAR(255)
DECLARE @CombinedSubject VARCHAR(255)
--DECLARE @xml NVARCHAR(MAX) --XML VARIABLE DECLARED IN ORPHANS DETECTED SECTION
DECLARE @blankbody NVARCHAR(MAX)

--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - SQL Server Role Attestation Report for '' + @@SERVERNAME
SET @CombinedSubject = @ServerName + @MailSubject


SET @blankbody = ''NO ACCOUNTS WITH ELEVATED ACCESS DETECTED ON THE INSTANCE

~*~NFAR~*~''

--Trigger the email 
EXEC msdb.dbo.sp_send_dbmail
	@profile_name = ''SQLServer''
,	@recipients = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com''
,	@subject = @MailSubject
,	@body = @blankbody
,   @body_format = ''HTML'';

END


ELSE 

BEGIN

--Declare variables
--DECLARE @ServerName VARCHAR(255) --VARIABLE DECLARED IN ZERO ORPHANS SECTION
--DECLARE @MailSubject VARCHAR(255) --VARIABLE DECLARED IN ZERO ORPHANS SECTION
--DECLARE @CombinedSubject VARCHAR(255) --VARIABLE DECLARED IN ZERO ORPHANS SECTION
DECLARE @xml NVARCHAR(MAX)
DECLARE @body NVARCHAR(MAX)

--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - SQL Server Role Attestation Report for '' + @@SERVERNAME
SET @CombinedSubject = @ServerName + @MailSubject

--SERVER_LOGIN_NAME	LOGIN_ACCOUNT_TYPE	IS_WINDOWS_GROUP	IS_WINDOWS_USER	IS_sysadmin	IS_serveradmin	IS_processadmin	IS_dbcreator	IS_setupadmin

SET @xml = CAST(( SELECT [SERVER_LOGIN_NAME] AS ''td'','''',[LOGIN_ACCOUNT_TYPE] AS ''td'','''',[IS_WINDOWS_GROUP] AS ''td'','''',[IS_WINDOWS_USER] AS ''td'','''',[IS_sysadmin] AS ''td'','''',[IS_serveradmin] AS ''td'','''',[IS_processadmin] AS ''td'','''',[IS_dbcreator] AS ''td'','''',[IS_setupadmin] AS ''td'',''''
FROM  #serverrolestemp 
ORDER BY [SERVER_LOGIN_NAME]
--ORDER BY [DatabaseName],[DatabaseRole],[DatabaseUserName],[InstanceLoginType]  
FOR XML PATH(''tr''), ELEMENTS ) AS NVARCHAR(MAX))


SET @body = ''<html><body>

<H3>Highly Elevated SQL Server Instance Level Access Report</H3>
<BR><BR>
Below is a list of accounts present on: <BR><H3>'' + @@SERVERNAME + 
''</H3>
<BR><BR>
The accounts listed are members of a highly scrutinized role within SQL Server on the above named instance.

<BR><BR>
Please verify that the access listed is appropriate.

<BR><BR>
<table border = 1> 
<tr>
<th> ACCOUNT NAME </th> <th> TYPE OF ACCOUNT </th> <th> IS ACCOUNT A WINDOWS GROUP? </th> <th> IS ACCOUNT A WINDOWS USER? </th> <th> IS ACCOUNT MEMBER OF sysadmin ROLE? </th> <th> IS ACCOUNT MEMBER OF serveradmin ROLE? </th> <th> IS ACCOUNT MEMBER OF processadmin ROLE? </th> <th> IS ACCOUNT MEMBER OF dbcreator ROLE? </th> <th> IS ACCOUNT MEMBER OF setupadmin ROLE? </th>
</tr>''    


SET @body = @body + @xml +''</table>

</body></html> 
<BR><BR>
A list of default administrative accounts can be found at the following link:  https://confluence.sierraspace.com/x/MgGFEQ 
<BR><BR>
Please note that any accounts present on this report that are not listed on the above webpage should be subjected to close scrutiny to determine appropriateness.
<BR><BR>
Regards,
<BR>
SierraSpace Database Solutions
<BR><BR><BR><BR>

<H3>RE:  ITGC-APD-3, ITGC-APD-5, ITGC-APD-7, ITGC-APD-9, ITGC-APD-10</H3>
'' 

--Trigger the email 
EXEC msdb.dbo.sp_send_dbmail
	@profile_name = ''SQLServer''
,	@recipients = ''stephen.mccord@sierraspace.com''
--,	@recipients = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com''
,	@subject = @MailSubject
,	@body = @body
,   @body_format = ''HTML'';

END


--Drop the session temp table
DROP TABLE #serverrolestemp
', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Generate and send report (heavy format)]    Script Date: 4/24/2024 1:21:22 PM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Generate and send report (heavy format)', 
		@step_id=2, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'
--execute proc
EXEC [spc_dba_utilities].[dbo].[dba_sp_server_level_role_members]


--Dump proc output into #temp table

SELECT * INTO #serverrolestemp
FROM spc_dba_utilities.dbo.server_level_role_attestation_TEMP
--WHERE SERVER_LOGIN_NAME NOT IN (''117968-a1'',''117962-a1'',''cms_admin'',''idera_dm_admin'',''sa'')


DECLARE @CountValue INT
SELECT @CountValue = COUNT(*)
FROM spc_dba_utilities..server_level_role_attestation_TEMP

IF (@CountValue = 0)
BEGIN 

--Declare variables
DECLARE @ServerName VARCHAR(255)
DECLARE @MailSubject VARCHAR(255)
DECLARE @CombinedSubject VARCHAR(255)
--DECLARE @xml NVARCHAR(MAX) --XML VARIABLE DECLARED IN ACCOUNTS DETECTED SECTION
DECLARE @blankbody NVARCHAR(MAX)

--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - SQL Server Role Attestation Report for '' + @@SERVERNAME
SET @CombinedSubject = @ServerName + @MailSubject


SET @blankbody = ''NO ACCOUNTS WITH ELEVATED ACCESS DETECTED ON THE INSTANCE

~*~NFAR~*~''

--Trigger the email 
EXEC msdb.dbo.sp_send_dbmail
	@profile_name = ''SQLServer''
,	@recipients = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com''
,	@subject = @MailSubject
,	@body = @blankbody
,   @body_format = ''HTML'';

END

ELSE 

BEGIN

-- define CSS inside the HTML head section
DECLARE @body VARCHAR(MAX)= ''
<html>
<head> <style>
 #g {color: green;}
 #r {color: red;}
 #orng {color: orange;}
 #odd {background-color: lightgrey}
</style> </head>'';
 
DECLARE @i INT = 0
, @pos INT
, @s VARCHAR(MAX)
, @ts VARCHAR(MAX)
, @xml VARCHAR(MAX);


DECLARE @recipients VARCHAR(MAX) = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com'' 
--DECLARE @ServerName VARCHAR(255)
--DECLARE @MailSubject VARCHAR(255)
--DECLARE @CombinedSubject VARCHAR(255)


--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - SQL Server Role Attestation Report for '' + @@SERVERNAME
SET @CombinedSubject = @ServerName + @MailSubject


 
--get core xml string
SET @xml = CAST(( SELECT 
CASE WHEN [SERVER_LOGIN_NAME] NOT IN (''117968-a1'',''117962-a1'',''cms_admin'',''idera_dm_admin'',''sa'', ''SIERRASPACE\P-AllSQL-DBMS-Sysadmin'')
		THEN''zr''+CAST([SERVER_LOGIN_NAME] AS VARCHAR(75))
	 WHEN [SERVER_LOGIN_NAME] LIKE (''%P-AllSQL-DBMS-Sysadmin%'')
		THEN''zorng''+CAST([SERVER_LOGIN_NAME] AS VARCHAR(75))
     WHEN [SERVER_LOGIN_NAME] IN (''117968-a1'',''117962-a1'',''cms_admin'',''idera_dm_admin'',''sa'')
		THEN''zg''+CAST([SERVER_LOGIN_NAME] AS VARCHAR(75))
     ELSE CAST([SERVER_LOGIN_NAME] AS VARCHAR(75))
END AS ''td''
, ''''
,[LOGIN_ACCOUNT_TYPE] AS ''td''
,''''
,[IS_WINDOWS_GROUP] AS ''td''
,''''
,[IS_WINDOWS_USER] AS ''td''
,''''
,[IS_sysadmin] AS ''td''
,''''
,[IS_serveradmin] AS ''td''
,''''
,[IS_processadmin] AS ''td''
,''''
,[IS_dbcreator] AS ''td''
,''''
,[IS_setupadmin] AS ''td''
,''''
FROM  #serverrolestemp
ORDER BY [IS_WINDOWS_GROUP], [SERVER_LOGIN_NAME]
FOR XML PATH(''tr''), ELEMENTS ) AS NVARCHAR(MAX));


--EVALUATE CASE STATEMENT.  COLOR TEXT FONT ACCORDINGLY. 
SET @xml=REPLACE(@xml, ''<td>zg'', ''<td id="g">''); -- Green
SET @xml=REPLACE(@xml, ''<td>zr'', ''<td id="r">''); -- Red
SET @xml=REPLACE(@xml, ''<td>zorng'', ''<td id="orng">''); -- Orange

--ZEBRA STRIPE THE ROWS IN THE RESULT SET 
SELECT @s = ''''
, @pos = CHARINDEX(''<tr>'', @xml, 4);
 
WHILE(@pos > 0)
BEGIN
   SET @i += 1;
   SET @ts = SUBSTRING(@xml, 1, @pos-1)
   IF(@i % 2 = 1)
      set @ts = REPLACE(@ts, ''<tr>'', ''<tr id="odd">'');
   SET @s += @ts;
   SET @xml = SUBSTRING(@xml, @pos, LEN(@xml));
   SET @pos =  CHARINDEX(''<tr>'', @xml, 4);
END -- while
-- handling the last piece
SET @i +=1;
SET @ts = @xml;
IF(@i % 2 = 1)
   SET @ts = REPLACE(@ts, ''<tr>'', ''<tr id="odd">'');
SET @s += @ts;

--WRITE RESULT SET TO EMAIL BODY
SET @body +=
''<body>
<H3>Highly Elevated SQL Server Instance Level Access Report</H3>
<BR>
Below is a list of accounts present on: <H3>'' + @@SERVERNAME + ''</H3>
<BR><BR>
The accounts listed are members of a highly scrutinized role within SQL Server on the above named instance.
<BR><BR>
<p style="margin-left:20px;">
-Accounts that are listed using green font are SQL Server Authenticated accounts that are used to perform the Database Administration function.  
</p>
<p style="margin-left:50px;">
-A list of default administrative accounts can be found at the following link:  https://confluence.sierraspace.com/x/MgGFEQ 
</p>
<p style="margin-left:20px;">
-Accounts that are listed using orange font are Windows Security Groups that should only contain Windows Accounts that belong to members of the Database Administration function.  
</p>
<p style="margin-left:50px;">
-Provisioning membership to such groups is controlled via ActiveDirectory, and should be attested to and verified by the CyberSecurity function.
</p>
<p style="margin-left:20px;">
-Accounts that are listed using red font should be scrutinized and verified for appropriateness as necessary by Solution Owners, CyberSecurity <i>(ActiveDirectory platform administrator)</i>, Leadership, and the Database Administration function.
</p>
<BR>
<table border = 1> 
<tr>

<th> ACCOUNT NAME </th> 
<th> TYPE OF ACCOUNT </th> 
<th> IS ACCOUNT A WINDOWS GROUP? </th> 
<th> IS ACCOUNT A WINDOWS USER? </th> 
<th> IS ACCOUNT MEMBER OF sysadmin ROLE? </th> 
<th> IS ACCOUNT MEMBER OF serveradmin ROLE? </th> 
<th> IS ACCOUNT MEMBER OF processadmin ROLE? </th> 
<th> IS ACCOUNT MEMBER OF dbcreator ROLE? </th> 
<th> IS ACCOUNT MEMBER OF setupadmin ROLE? </th>


</tr>'' 
+ @s+''</table> </body> </html>
<BR><BR>
Regards,
<BR>
SierraSpace Database Solutions
<BR><BR><BR><BR>

<H3>RE:  ITGC-APD-3, ITGC-APD-5, ITGC-APD-7, ITGC-APD-9, ITGC-APD-10</H3>
'' ;
 


EXEC msdb.dbo.sp_send_dbmail
@profile_name = ''SQLServer''
--,@recipients = @recipients
,@recipients = ''stephen.mccord@sierraspace.com'' --DEBUGGING
,@subject = @MailSubject
,@body = @body
,@body_format =''HTML''
END


DROP TABLE #serverrolestemp', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO

