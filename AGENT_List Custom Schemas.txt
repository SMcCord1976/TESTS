USE [msdb]
GO

/****** Object:  Job [[DBA] - List custom schemas]    Script Date: 4/25/2024 9:35:59 AM ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 4/25/2024 9:36:00 AM ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'[DBA] - List custom schemas', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'List all user created schemas.', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'sa', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Generate and send report]    Script Date: 4/25/2024 9:36:01 AM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Generate and send report', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'
--List of custom schemas present in each database

DECLARE @command varchar(max) 

SELECT @command = ''IF ''''?'''' NOT IN(''''master'''', ''''model'''', ''''msdb'''', ''''tempdb'''') BEGIN USE ? 
   SELECT @@SERVERNAME AS ''''SERVER_INSTANCE''''
   , db_name() AS ''''DATABASE''''
   , name AS ''''SCHEMA'''' 
   FROM sys.schemas 
   WHERE name NOT IN 
   (''''dbo''''
   ,''''guest''''
   ,''''INFORMATION_SCHEMA''''
   ,''''sys''''
   ,''''db_owner''''
   ,''''db_accessadmin''''
   ,''''db_securityadmin''''
   ,''''db_ddladmin''''
   ,''''db_backupoperator''''
   ,''''db_datareader''''
   ,''''db_datawriter''''
   ,''''db_denydatareader''''
   ,''''db_denydatawriter'''')
   END'' 


--Insert output from above into table variable  	 

DECLARE @dba_schema_list_tmp TABLE
(
  [SERVER_INSTANCE] VARCHAR(255),
  [DATABASE] VARCHAR(255),
  [SCHEMA] VARCHAR(255)
)

INSERT INTO @dba_schema_list_tmp
EXEC sp_MSforeachdb @command


--Display homogenized list from all databases
SELECT * INTO #schemalist
from @dba_schema_list_tmp


DECLARE @CountValue INT
SELECT @CountValue = COUNT(*)
FROM @dba_schema_list_tmp


IF (@CountValue = 0)
BEGIN 

--Declare variables
DECLARE @ServerName VARCHAR(255)
DECLARE @MailSubject VARCHAR(255)
DECLARE @CombinedSubject VARCHAR(255)
--DECLARE @xml NVARCHAR(MAX) --XML VARIABLE DECLARED IN ACCOUNTS DETECTED SECTION
DECLARE @blankbody NVARCHAR(MAX)

--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - Schema List ''
SET @CombinedSubject = @ServerName + @MailSubject


SET @blankbody = ''NO CUSTOM SCHEMAS PRESENT ON ANY OF THE DATABASES WITHIN THIS INSTANCE

~*~NFAR~*~''

--Trigger the email 
EXEC msdb.dbo.sp_send_dbmail
	@profile_name = ''SQLServer''
--,	@recipients = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com''
,	@recipients = ''stephen.mccord@sierraspace.com'' --DEBUGGING
,	@subject = @MailSubject
,	@body = @blankbody
,   @body_format = ''HTML'';

END

ELSE 

BEGIN

-- define CSS inside the HTML head section
DECLARE @body VARCHAR(MAX)= ''
<html>
<head> <style>
 #g {color: green;}
 #r {color: red;}
 #orng {color: orange;}
 #odd {background-color: lightgrey}
</style> </head>'';
 
DECLARE @i INT = 0
, @pos INT
, @s VARCHAR(MAX)
, @ts VARCHAR(MAX)
, @xml VARCHAR(MAX);


DECLARE @recipients VARCHAR(MAX) = ''stephen.mccord@sierraspace.com; joshua.grasso@sierraspace.com; scott.hanks@sierraspace.com; casey.marincin@sierraspace.com; liz.mercado@sierraspace.com'' 
--DECLARE @ServerName VARCHAR(255)
--DECLARE @MailSubject VARCHAR(255)
--DECLARE @CombinedSubject VARCHAR(255)


--Set variables
SET @ServerName =  @@SERVERNAME
SET @MailSubject = ''[FOR INFORMATION / REVIEW] - Custom Database Schemas on '' + @ServerName
SET @CombinedSubject = @ServerName + @MailSubject


 
--get core xml string
SET @xml = CAST(( SELECT 
[SERVER_INSTANCE] AS ''td''
,''''
,[DATABASE] AS ''td''
,''''
,[SCHEMA] AS ''td''
,''''
FROM  #schemalist
ORDER BY [DATABASE]
FOR XML PATH(''tr''), ELEMENTS ) AS NVARCHAR(MAX));


--EVALUATE CASE STATEMENT.  COLOR TEXT FONT ACCORDINGLY. 
SET @xml=REPLACE(@xml, ''<td>zg'', ''<td id="g">''); -- Green
SET @xml=REPLACE(@xml, ''<td>zr'', ''<td id="r">''); -- Red
SET @xml=REPLACE(@xml, ''<td>zorng'', ''<td id="orng">''); -- Orange

--ZEBRA STRIPE THE ROWS IN THE RESULT SET 
SELECT @s = ''''
, @pos = CHARINDEX(''<tr>'', @xml, 4);
 
WHILE(@pos > 0)
BEGIN
   SET @i += 1;
   SET @ts = SUBSTRING(@xml, 1, @pos-1)
   IF(@i % 2 = 1)
      set @ts = REPLACE(@ts, ''<tr>'', ''<tr id="odd">'');
   SET @s += @ts;
   SET @xml = SUBSTRING(@xml, @pos, LEN(@xml));
   SET @pos =  CHARINDEX(''<tr>'', @xml, 4);
END -- while
-- handling the last piece
SET @i +=1;
SET @ts = @xml;
IF(@i % 2 = 1)
   SET @ts = REPLACE(@ts, ''<tr>'', ''<tr id="odd">'');
SET @s += @ts;

--WRITE RESULT SET TO EMAIL BODY
SET @body +=
''<body>
<H3>CUSTOM SCHEMAS PRESENT ON:  '' + @ServerName +'' </H3>
<BR><BR>
Below is a list of user created (custom) schemas present within each database on the above named instance of SQL Server:

<BR>
<table border = 1> 
<tr>

<th> SERVER INSTANCE </th> 
<th> DATABASE </th> 
<th> SCHEMA </th> 



</tr>'' 
+ @s+''</table> </body> </html>
<BR><BR>
Regards,
<BR>
SierraSpace Database Solutions
<BR><BR><BR><BR>

'' ;
 


EXEC msdb.dbo.sp_send_dbmail
@profile_name = ''SQLServer''
--,@recipients = @recipients
,@recipients = ''stephen.mccord@sierraspace.com'' --DEBUGGING
,@subject = @MailSubject
,@body = @body
,@body_format =''HTML''
END


DROP TABLE #schemalist', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO

